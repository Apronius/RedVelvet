Transform: AWS::Serverless-2016-10-31
Description: SAM Textract Lambda stack
Parameters:
  DemoUser:
    Description: The demo user name to connect to Postgres.
    Type: String
  TableName:
    Description: The RDS Postgres table name.
    Type: String    

Resources:
  # Read function will publish to SNS
  # Write function will subscribe to SNS
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: LambdaSNSTopic
      TopicName: LambdaSNSTopic
  # Read function triggered by S3 upload
  # It will publish to SNS
  # Write function
  WriteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.7
      Handler: index.lambda_handler
      Layers:
        - !Ref WriteFunctionDepLayer
      CodeUri: ./functions/writer
      Role: !GetAtt WriteLambdaExecutionRole.Arn
      Environment:
        Variables:
          # import values from db stack to write to RDS
          DBEndPoint: !ImportValue DBEndpointAddress
          DatabaseName: !ImportValue DBName
          DBUserName: !Ref DemoUser
          TableName: !Ref TableName
  # Dependency layer where we install pg8000
  WriteFunctionDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: write-function-app-dependencies
        Description: Dependencies for sam app 
        ContentUri: ./functions/writer/dependencies/
        CompatibleRuntimes:
          - python3.7
        LicenseInfo: 'MIT'
        RetentionPolicy: Retain
  # Write Function subscribes to SNS
  Subscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt WriteFunction.Arn
      Protocol: lambda
      TopicArn: !Ref SNSTopic
  # Allow SNS to invoke the Write lambda
  InvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref WriteFunction
      Principal: sns.amazonaws.com
  # Allow textract (used in Read Lambda) to publish to SNS